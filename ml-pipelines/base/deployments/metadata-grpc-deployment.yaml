apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application-crd-id: kubeflow-pipelines
    component: metadata-grpc-server
  name: metadata-grpc-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      application-crd-id: kubeflow-pipelines
      component: metadata-grpc-server
  template:
    metadata:
      labels:
        application-crd-id: kubeflow-pipelines
        component: metadata-grpc-server
    spec:
      containers:
        - args:
            - --grpc_port=8080
            - --mysql_config_database=$(MYSQL_DATABASE)
            - --mysql_config_host=$(MYSQL_HOST)
            - --mysql_config_port=$(MYSQL_PORT)
            - --mysql_config_user=$(DBCONFIG_USER)
            - --mysql_config_password=$(DBCONFIG_PASSWORD)
            - --enable_database_upgrade=true
          command:
            - /bin/metadata_store_server
          env:
            - name: DBCONFIG_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: $(database_secret)
            - name: DBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: $(database_secret)
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: mlmdDb
                  name: $(pipeline_install_configuration)
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  key: dbHost
                  name: $(pipeline_install_configuration)
            - name: MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  key: dbPort
                  name: $(pipeline_install_configuration)
          image: metadata-grpc
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            tcpSocket:
              port: grpc-api
            timeoutSeconds: 2
          name: container
          ports:
            - containerPort: 8080
              name: grpc-api
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 5
            tcpSocket:
              port: grpc-api
            timeoutSeconds: 2
      serviceAccountName: metadata-grpc-server
